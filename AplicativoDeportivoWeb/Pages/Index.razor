@page "/"
@using AplicativoDeportivoWeb.Domain
@using Toolbelt.Blazor.HeadElement
@inject ILogger<Index> Logger
@inject AplicativoDeportivoWeb.Repository.Postgres.IUserRepository UserRepository
@inject IHeadElementHelper HeadElementHelper
@inject NavigationManager NavigationManager

<PageTitle>Registro</PageTitle>

      <div class=index-page
        <div class="py-5 text-center ">
        <img class="d-block mx-auto mb-4" src="/images/38464.png" alt="" width="72" height="72">
        <h1 >Registro de nuevo usuario</h1>
      </div>
<div class="d-flex align-items-center justify-content-center vh-100  text-center container">  
  <form class="needs-validation" method="post" @onsubmit="Submit" @formname="Index">
            <AntiforgeryToken />
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="firstName"><strong><em>Nombre</em></strong></label>
                <InputText type="text" class="form-control" id="firstName" placeholder=""  required @bind-Value="Model!.Name" style="box-shadow: 0px 0px 30px 2px rgb(195, 247, 255);"/>
                <div class="invalid-feedback">
                  Valid first name is required.
                </div>
              </div>

              <div class="col-md-6 mb-3">
                <label for="Surname"><strong><em>Apellido</em></strong></label>
                <InputText type="text" class="form-control" id="Surname" placeholder=""  required @bind-Value="Model!.Surname" style="box-shadow: 0px 0px 30px 10px rgb(195, 247, 255);"/>
                <div class="invalid-feedback">
                  Valid last name is required.
                </div>
              </div>
            </div>

            <div class="mb-3">
              <label for="email"><strong><em>Email</em></strong></label>
              <InputText type="email" class="form-control" id="email" placeholder=""  required @bind-Value="Model!.Email" style="box-shadow: 0px 0px 30px 10px rgb(195, 247, 255);"/>
            </div>

            <div class="mb-3">
              <label for="password"><strong><em>Contraseña</em></strong></label>
              <InputText type="password" class="form-control" id="password" placeholder=""  required @bind-Value="Model!.Password" style="box-shadow: 0px 0px 30px 10px rgb(195, 247, 255);"/>
            </div>

           <div class="mb-3">
              <label for="dob"><strong><em>Fecha de nacimiento</em></strong></label>
                <InputDate class="form-control" id="dob" placeholder=""  required @bind-Value="Model!.DOB" style="box-shadow: 0px 0px 30px 10px rgb(195, 247, 255);"/>
            </div>

            <div class="mb-3">
              <label for="peso"><strong><em>Peso</em></strong></label>
              <InputNumber type="float" class="form-control" id="Weight" placeholder=""  required @bind-Value="Model!.Weight" style="box-shadow: 0px 0px 30px 10px rgb(195, 247, 255);"/>
            </div>

            <div class="mb-3">
              <label for="height"><strong><em>Altura</em></strong></label>
              <InputNumber type="float" class="form-control" id="Height" placeholder=""  required @bind-Value="Model!.Height" style="box-shadow: 0px 0px 30px 10px rgb(195, 247, 255);"/>
            </div>
            

            <div class="d-block my-3">
            
            </div>
            <button class="btn btn-primary btn-lg btn-block" type="submit">¡Registrarse!</button>
          </form>
        </div>
        <footer class="my-5 pt-5 text-muted text-center text-small">
        <p class="mb-1">&copy; 2023-2024 Ramón M R / TEG IUPSM </p>
        
      </footer>
      </div>
@code {
  [SupplyParameterFromForm]
  public User? Model { get; set; }
  protected override void OnInitialized()
  {
      Model ??= new User { DOB = DateTime.Now };
  }
  private string formname = "Index";
  private void Submit()
  {
      Logger.LogInformation("listo 🏋️‍♂️");
      Logger.LogInformation("Id = {Id}", Model?.Id);
      Logger.LogInformation("Name = {Name}", Model?.Name);
      Logger.LogInformation("Surname = {Surname}", Model?.Surname);
      Logger.LogInformation("Email = {Email}", Model?.Email);
      Logger.LogInformation("Password = {Password}", Model?.Password);
      Logger.LogInformation("dob = {dob}", Model?.DOB.ToUniversalTime());
      Logger.LogInformation("Height = {Height}", Model?.Height);
      Logger.LogInformation("Weight = {Weight}", Model?.Weight);
      UserRepository.AddUser(Model);

      NavigationManager.NavigateTo("/login"); 
  }
  
  }

